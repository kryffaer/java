package sem_2.labor2_3.Task2_10;

import sem_2.TaskDescription;

@TaskDescription(name = "Задача 10: Гонка бегунов с использованием CyclicBarrier", description =
        "Группа спортсменов участвует в забеге. Однако перед началом гонки все должны собраться на старте.\n" +
                "Как только все участники будут готовы, забег начнётся одновременно.\n" +
                "Используйте CyclicBarrier, чтобы синхронизировать запуск гонки.\n" +
                "Каждый бегун стартует одновременно, затем бежит разное время (симулируется Thread.sleep), после чего финиширует.\n" +
                "Как только все бегуны завершат дистанцию, программа выводит сообщение о завершении гонки.\n" +
                "Требования к задаче:\n" +
                "Создать CyclicBarrier для синхронизации начала забега.\n" +
                "Реализовать класс Runner, который будет выполнять следующую логику в потоке:\n" +
                "Ожидание старта (использование barrier.await()).\n" +
                "Симуляция бега (Thread.sleep(randomTime)).\n" +
                "Вывод сообщения о финише.\n" +
                "После финиша всех участников программа должна сообщить, что гонка завершена.")

public class Task2_10 {
    public void execute(int numRunners) {
        RaceManager manager = new RaceManager(numRunners);
        manager.startRace();
    }
}
