package sem_2.labor2_3.Task2_10;

// Задача 10: Гонка бегунов с использованием CyclicBarrier
// Группа спортсменов участвует в забеге. Однако перед началом гонки все должны собраться на старте.
// Как только все участники будут готовы, забег начнётся одновременно.
// Используйте CyclicBarrier, чтобы синхронизировать запуск гонки.
// Каждый бегун стартует одновременно, затем бежит разное время (симулируется Thread.sleep), после чего финиширует.
// Как только все бегуны завершат дистанцию, программа выводит сообщение о завершении гонки.
// Требования к задаче:
// Создать CyclicBarrier для синхронизации начала забега.
// Реализовать класс Runner, который будет выполнять следующую логику в потоке:
// Ожидание старта (использование barrier.await()).
// Симуляция бега (Thread.sleep(randomTime)).
// Вывод сообщения о финише.
// После финиша всех участников программа должна сообщить, что гонка завершена.

public class Main {
    public static void main(String[] args) {
        int numRunners = 5;
        if (args.length > 0) {
            numRunners = Integer.parseInt(args[0]);
        }

        RaceManager manager = new RaceManager(numRunners);
        manager.startRace();
    }
}
